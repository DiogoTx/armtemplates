{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "String"
    },
    "networkInterfaceName": {
      "type": "String"
    },
    "subnetName": {
      "type": "String"
    },
    "virtualNetworkName": {
      "type": "String"
    },
    "subnets": {
      "type": "Array"
    },
    "publicIpAddressName": {
      "type": "String"
    },
    "virtualMachineName": {
      "type": "String"
    },
    "virtualMachineSize": {
      "type": "String"
    },
    "adminUsername": {
      "type": "String"
    },
    "adminPassword": {
      "type": "SecureString"
    },
    "diagnosticsStorageAccountName": {
      "type": "String"
    },
    "vmPrefix": {
      "type": "String"
    },
    "networkSecurityGroupName": {
        "type": "String"
    }
  },
  "variables": {
  },
  "resources": [
	              {
              "type": "Microsoft.Network/publicIpAddresses",
              "apiVersion": "2019-02-01",
              "name": "[variables('publicIpAddressName')]",
              "location": "[variables('rgLocation')]",
              "sku": {
                "name": "[variables('publicIpAddressSku')]"
              },
              "properties": {
                "publicIpAllocationMethod": "[variables('publicIpAddressType')]",
				"dnsSettings": {
				  "domainNameLabel": "[concat(resourceGroup().name, uniqueString(variables('virtualNetworkName')))]"
				}
              }
            },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-06-01",
      "name": "[parameters('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
			"id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[parameters('virtualMachineName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
      ],	    
  "plan": {
    "name": "omnia-low-code-platform-v3-vm-disk",
    "publisher": "numbersbelieve",
    "product": "omnia-low-code-platform-v3-vm"
  },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "name": "[concat(parameters('vmPrefix'), '-gateway-os-vhd')]"
          },
          "imageReference": {
            "publisher": "numbersbelieve",
            "offer": "omnia-low-code-platform-v3-vm",
            "sku": "omnia-low-code-platform-v3-vm-disk",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
		  "linuxConfiguration": {
			"disablePasswordAuthentication": false
		  }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
          }
      }
        },
      "resources": [
        {
          "name": "config-app",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2019-03-01",
          "dependsOn": [
	    "[resourceId('Microsoft.Network/publicIpAddresses/', parameters('publicIPAddressName'))]",
            "[resourceId('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
          ],
          "tags": {
            "displayName": "config-app"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {},
            "protectedSettings": {
              "commandToExecute": "[concat('sudo sed -i \"s/PLATFORM_HOSTNAME/', reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn, '/g\" /home/omnia/config/omnia.json')]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    }
  }
}
